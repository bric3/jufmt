# jufmt
#
# Copyright (c) 2023, today - Brice DUTHEIL
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

name: Java CI with Gradle

on:
  workflow_dispatch:

  push:
    branches: [ master ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4
        with:
          min-wrapper-count: 0
        
  build:
    name: Build ${{ matrix.tag }}
    runs-on: ${{ matrix.runner }}
    continue-on-error: ${{ matrix.ignore-errors }}
    strategy:
      matrix:
        os: ['linux']
        arch: ['amd64']
        runner: ['ubuntu-latest']
        tag: ['linux-amd64']
        ignore-errors: [false]
        include:
          - os: macos
            runner: macos-latest
            arch: amd64
            tag: darwin-amd64
            ignore-errors: false
          - os: macos
            runner: macos-14
            arch: aarch64
            tag: darwin-aarch64
            ignore-errors: false
          - os: windows
            runner: windows-latest
            arch: amd64
            tag: windows-amd64
            ignore-errors: true

    steps:
    - uses: actions/checkout@v4
    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        # Gradle currently does not detect the Oracle GraalVM installation ('graalvm')
        distribution: 'graalvm-community'
        java-version: '21'
        components: 'native-image'
        native-image-job-reports: 'true'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Show toolchains
      run: ./gradlew -q javaToolchains

    - name: Build with Gradle
      run: ./gradlew build

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always() # always run even if the previous step fails
      with:
        name: junit-test-results-${{ matrix.tag }}
        path: '**/build/test-results/test/TEST-*.xml'
        retention-days: 1

    - name: Build native image
      run: ./gradlew nativeCompile

    - name: Run native image
      run: ./jufmt-cli/build/native/nativeCompile/jufmt --help

    - name: Produce doc
      run: ./gradlew asciidoctor

    - name: Rename binary
      if: contains(matrix.os, 'linux') || contains(matrix.os, 'macos')
      run: mv ./jufmt ./jufmt-${{ matrix.tag }}
      working-directory: ./jufmt-cli/build/native/nativeCompile
    - name: Rename Windows binary
      if: contains(matrix.os, 'windows')
      run: mv ./jufmt.exe ./jufmt-windows-amd64.exe
      working-directory: ./jufmt-cli/build/native/nativeCompile

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: jufmt-${{ matrix.tag }}
        path: |
          ./jufmt-cli/build/native/nativeCompile/jufmt*
          !./jufmt-cli/build/native/nativeCompile/jufmt*.bgv
        if-no-files-found: error
        retention-days: 7

  # This job will update the PR with the JUnit report
  # In order to be able to make the most of it this job in particular has
  # augmented permissions.
  junit-report:
    name: JUnit Report ${{ matrix.tag }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ['linux-amd64', 'darwin-amd64', 'darwin-aarch64', 'windows-amd64']
    if: |
      success() || failure()
    needs: [ build ]
    permissions:
      checks: write # for mikepenz/action-junit-report

    steps:
      - name: Download Test Report
        uses: actions/download-artifact@v4
        with:
          name: junit-test-results-${{ matrix.tag }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        with:
          check_name: Test Report - ${{ matrix.tag }}
          commit: ${{github.event.workflow_run.head_sha}}
          report_paths: '**/build/test-results/test/TEST-*.xml'

  release:
    needs: [ build ]
    runs-on: ubuntu-24.04
    environment: release
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v4
        with:
          name: jufmt-${{ github.sha }}
      - name: Release binary artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            jufmt-linux-amd64
            jufmt-windows-amd64.exe
            jufmt-darwin-amd64
            jufmt-darwin-aarch64